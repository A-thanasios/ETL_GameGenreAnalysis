name: ETL
services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres
    restart: always
    environment:
      # Superuser for initial bootstrap
      POSTGRES_USER: ${POSTGRES_SUPERUSER_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_SUPERUSER_PASSWORD:-<superuser_password>}
      POSTGRES_DB: ${POSTGRES_SUPERUSER_DB:-postgres}

      # App DB config (used by init script)
      APP_DB_NAME: ${APP_DB_NAME:-app_db}
      APP_DB_USER: ${APP_DB_USER:-<app_db_user>}
      APP_DB_PASSWORD: ${APP_DB_PASSWORD:-<app_db_password>}

      # Prefect DB config (used by init script)
      PREFECT_DB_NAME: ${PREFECT_DB_NAME:-prefect_db}
      PREFECT_DB_USER: ${PREFECT_DB_USER:-<prefect_db_user>}
      PREFECT_DB_PASSWORD: ${PREFECT_DB_PASSWORD:-<prefect_db_password>}
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_SUPERUSER_USER:-postgres} -d ${POSTGRES_SUPERUSER_DB:-postgres}"]
      interval: 5s
      timeout: 5s
      retries: 20

  pgadmin:
    image: dpage/pgadmin4:8
    container_name: pgadmin
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@example.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-<pgadmin_password>}
      PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION: "True"
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin


  prefect:
    image: prefecthq/prefect:3-latest
    container_name: prefect
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      PREFECT_API_DATABASE_CONNECTION_URL: postgresql+asyncpg://${PREFECT_DB_USER:-<prefect_db_user>}:${PREFECT_DB_PASSWORD:-<prefect_db_password>}@postgres:5432/${PREFECT_DB_NAME:-prefect_db}
      PREFECT_SERVER_ANALYTICS_ENABLED: "false"
    command: ["prefect", "server", "start", "--host", "0.0.0.0", "--port", "4200"]
    ports:
      - "4200:4200"
    healthcheck:
      test: [ "CMD-SHELL", "python -c \"import urllib.request,sys; sys.exit(0) if urllib.request.urlopen('http://localhost:4200/api/health', timeout=2).status==200 else sys.exit(1)\"" ]
      interval: 5s
      timeout: 5s
      retries: 40
      start_period: 30s


  app:
    container_name: app
    build:
      context: ..
      dockerfile: .docker/Dockerfile
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
      prefect:
        condition: service_healthy
    environment:
      # Superuser for initial bootstrap
      POSTGRES_USER: ${POSTGRES_SUPERUSER_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_SUPERUSER_PASSWORD:-<superuser_password>}
      POSTGRES_DB: ${POSTGRES_SUPERUSER_DB:-postgres}

      # App DB config (used by init script)
      APP_DB_NAME: ${APP_DB_NAME:-app_db}
      APP_DB_USER: ${APP_DB_USER:-<app_db_user>}
      APP_DB_PASSWORD: ${APP_DB_PASSWORD:-<app_db_password>}

      # Prefect DB config (used by init script)
      PREFECT_DB_NAME: ${PREFECT_DB_NAME:-prefect_db}
      PREFECT_DB_USER: ${PREFECT_DB_USER:-<prefect_db_user>}
      PREFECT_DB_PASSWORD: ${PREFECT_DB_PASSWORD:-<prefect_db_password>}

      SQLALCHEMY_URL: postgresql://${APP_DB_USER:-<app_db_user>}:${APP_DB_PASSWORD:-<app_db_password>}@postgres:5432/${APP_DB_NAME:-app_db}
      PREFECT_API_URL: http://prefect:4200/api
      STEAM_API_KEY: ${STEAM_API_KEY}

volumes:
  pg_data:
  pgadmin_data: